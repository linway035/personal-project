<style>
  div {
    display: block;
  }

  .left-panel {
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    width: 260px;
    overflow-x: hidden;
    background-color: #3f0e40;
    color: white;
  }

  .chat-user {
    padding: 10px;
  }

  .description {
    display: inline-block;
  }

  .right-panel {
    margin-left: 260px;
  }

  .chat-header {
    line-height: 40px;
    padding: 10px 20px;
    border-bottom: 1px solid #dddddd;
  }

  .messages {
    margin: 0;
    padding: 20px;
  }

  ul {
    display: block;
    list-style-type: disc;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    padding-inline-start: 40px;
  }

  .message {
    list-style: none;
  }

  li {
    display: list-item;
    text-align: -webkit-match-parent;
  }

  .active {
    background-color: #fff000;
  }
</style>

<div class="chatroom-container">
  <div class="left-panel"></div>
  <div class="right-panel">
    <div class="chat-header" id="chatHeader">Private Chat</div>
    <ul class="messages" id="messages"></ul>
    <form id="form" action="">
      <input id="input" placeholder="Message" autocomplete="off" />
      <button type="submit">Send</button>
    </form>
  </div>
</div>

<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
<script>
  let socket = io('ws://localhost:8080')
  const form = document.getElementById('form')
  const input = document.getElementById('input')
  const messages = document.getElementById('messages')
  const chatHeader = document.getElementById('chatHeader')
  const senderId = localStorage.getItem('userId')
  const userName = localStorage.getItem('name')
  const leftPanel = document.querySelector('.left-panel')
  console.log('sender', senderId, 'userName', userName) //sender 17 userName WaForTest
  let activeChatRoom = null

  // 左側列表
  fetch('./chats/rooms')
    .then(response => response.json())
    .then(data => {
      data.forEach(user => {
        const chatUserElement = document.createElement('div')
        chatUserElement.classList.add('chat-user')
        chatUserElement.setAttribute('onclick', `openChat('${user.receiver_name}', ${user.room_id})`)
        chatUserElement.setAttribute('data-chat-user', user.receiver_name)

        const descriptionElement = document.createElement('div')
        descriptionElement.classList.add('description')

        const chatNameElement = document.createElement('div')
        chatNameElement.classList.add('chat-name')
        chatNameElement.textContent = user.receiver_name

        descriptionElement.appendChild(chatNameElement)
        chatUserElement.appendChild(descriptionElement)
        leftPanel.appendChild(chatUserElement)
      })
    })
    .catch(error => {
      console.log('Error fetching chat user list:', error)
    })

  function openChat(chatUser, roomId) {
    chatHeader.textContent = chatUser
    messages.innerHTML = ''
    activeChatRoom = roomId
    fetch(`./chats/messages/${roomId}`)
      .then(response => response.json())
      .then(data => {
        data.forEach(chat => {
          const li = document.createElement('li')
          li.classList.add('message')
          li.textContent = chat.message
          messages.appendChild(li)
        })
      })
      .catch(error => {
        console.log(`Error fetching chat messages for ${chatUser}:`, error)
      })
  }

  form.addEventListener('submit', function (e) {
    e.preventDefault()
    const message = input.value.trim()
    if (message !== '') {
      const li = document.createElement('li')
      li.classList.add('message')
      li.textContent = message
      messages.appendChild(li)
      // 發送訊息到伺服器
      console.log(activeChatRoom)
      socket.emit('message', {
        sender: senderId,
        room: activeChatRoom,
        message: message,
      })
      input.value = ''
    }
  })
</script>