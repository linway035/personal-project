<head>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link rel="stylesheet" href="/stylesheets/style.css">
</head>

<style>
  header{
    background: linear-gradient(to right,
        rgba(255, 255, 255, 1),
        rgba(47, 128, 237, 1));
  }  
</style>

<header class="p-3 mb-3 border-bottom fixed-top">
  <div class="container">
    <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
      <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-dark text-decoration-none">
        <img id="logo" src="/images/icons/logo.png">
      </a>
      <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3 ms-lg-auto">
        <input type="search" class="form-control" placeholder="Search..." aria-label="Search">
      </form>
      <ul class="nav col-12 col-lg-auto mb-2 justify-content-center mb-md-0">
        <li><a href="/home" class="nav-link px-2 link-secondary">Home</a></li>
        <li><a href="/chats" class="nav-link px-2 link-dark">Messages</a></li>
        <li><a href="#" class="nav-link px-2 link-dark">Follows</a></li>
      </ul>

      <div class="dropdown text-end">
        <a href="/users/{{user.id}}/profile" class="d-block link-dark text-decoration-none dropdown-toggle" id="dropdownUser1"
          data-bs-toggle="dropdown" aria-expanded="false">
          <img src="{{user.avatar}}" width="32" height="32" class="rounded-circle">
        </a>
        <ul class="dropdown-menu text-small" aria-labelledby="dropdownUser1">
          <li><a class="dropdown-item" href="#">Settings</a></li>
          <li><a class="dropdown-item" href="#">Profile</a></li>
          <li>
            <hr class="dropdown-divider">
          </li>
          <li><a class="dropdown-item" href="#">Sign out</a></li>
        </ul>
      </div>
    </div>
  </div>
</header>
<div class="below-header">
<div style="height: 85px; background:#fafafb"></div>
<div class="d-flex" style="height: 1200px;margin: 0 auto;">
  {{>sidebar route="home"}}
  <div class="tweets-mid"
    style="height: 1200px;border-left: 60px solid #fafafb; border-right: 1px solid #e6ecf0;">
    {{>index}}
  </div>
  {{>popular}}
</div>
</div>

{{!-- 這是推文modal --}}
{{>post-modal}}


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script>
  const stars = document.querySelectorAll('.star')

  stars.forEach(star => {
    star.addEventListener('click', () => {
      const rating = star.getAttribute('data-rating')
      const ratingContainer = star.parentNode
      const tweetId = ratingContainer.id.split('-')[1]
      sendRatingToServer(rating, tweetId)
    })

    star.addEventListener('contextmenu', event => {
      event.preventDefault(); // 阻止右鍵選單顯示
      const ratingContainer = star.parentNode;
      const tweetId = ratingContainer.id.split('-')[1];
      clearRating(tweetId);
    });
  })

  // 在頁面載入時獲取評分並顯示
  getRatingsFromServer()

  function getRatingsFromServer() {
    const ratingContainers = document.querySelectorAll('.rating')
    ratingContainers.forEach(ratingContainer => {
      const tweetId = ratingContainer.id.split('-')[1]
      const url = `/tweets/${tweetId}/rating`
      fetch(url)
        .then(response => response.json())
        .then(data => {
          const rating = data.rating
          highlightStars(tweetId, rating)
        })
        .catch(error => {
          console.log('getRatingsFromServer error')
        })
    })
  }

  function highlightStars(tweetId, rating) {
    const tweetRatingContainer = document.querySelector(`#rating-${tweetId}`)
    const tweetStars = tweetRatingContainer.querySelectorAll('.star')
    if (rating === null) {
      tweetStars.forEach(star => {
        star.innerHTML = '&#9734;' // 空心星星
      })
    } else {
      tweetStars.forEach((star, index) => {
        if (index < rating) {
          star.innerHTML = '&#9733;' // 實心星星
        } else {
          star.innerHTML = '&#9734;' // 空心星星
        }
      })
    }
  }

  function sendRatingToServer(rating, tweetId) {
    const url = `/tweets/${tweetId}/rating`
    fetch(url, {
      method: 'POST',
      body: JSON.stringify({ rating: rating }),
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then(response => {
        getRatingsFromServer();
      })
      .catch(error => {
        console.log('sendRatingToServer error')
      });
  }

  function clearRating(tweetId) {
    const url = `/tweets/${tweetId}/clearrating`;
    fetch(url, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then(response => {
        getRatingsFromServer();
      })
      .catch(error => {
        console.log('clearRating error');
      });
  }
</script>

